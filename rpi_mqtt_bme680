import os
import time
import sys
import bme680
import paho.mqtt.client as mqtt
import json

THINGSBOARD_HOST = 'XXX.XXX.XXX.XXX'
ACCESS_TOKEN = 'XXXXXX'

# Data capture and upload interval in seconds.
INTERVAL=2
next_reading = time.time()
client = mqtt.Client()

# Set access token
client.username_pw_set(ACCESS_TOKEN)

# Connect to ThingsBoard using default MQTT port and 60 seconds keepalive interval
client.connect(THINGSBOARD_HOST, 1883, 60)
client.loop_start()

### Define the BME6809 sensor
sensor = bme680.BME680()
sensor_data = {'temperature': 0, 'pressure': 0, 'humidity': 0, 'air_quality': 0}

### Oversample settings for the BME680 sensor
sensor.set_humidity_oversample(bme680.OS_2X)
sensor.set_pressure_oversample(bme680.OS_4X)
sensor.set_temperature_oversample(bme680.OS_8X)
sensor.set_filter(bme680.FILTER_SIZE_3)
sensor.set_gas_status(bme680.ENABLE_GAS_MEAS)
sensor.set_gas_heater_temperature(320)
sensor.set_gas_heater_duration(150)
sensor.select_gas_heater_profile(0)

print("\n\nCollecting data...")
try:
    while True:
      if sensor.get_sensor_data():
        output_temp = (sensor.data.temperature)
        output_pressure = (sensor.data.pressure)
        output_humidity = (sensor.data.humidity)
        output_airqual = (sensor.data.gas_resistance)

        sensor_data['temperature'] = output_temp
        sensor_data['pressure'] = output_pressure
        sensor_data['humidity'] = output_humidity
        sensor_data['air_quality'] = output_airqual

        print(output_temp, output_pressure, output_humidity, output_airqual)

        # Sending humidity and temperature data to ThingsBoard
        client.publish('v1/devices/me/telemetry', json.dumps(sensor_data), 1)
        next_reading += INTERVAL
        sleep_time = next_reading-time.time()
        if sleep_time > 0:
            time.sleep(sleep_time)

except KeyboardInterrupt:
    pass

client.loop_stop()
client.disconnect()
